experiment:
  dataset: ventrella_experiment
  data_config:
      strategy: fixed
#      train_path: ../data/ventrella_experiment/train2id_dbbook.csv
      train_path: ../data/ventrella_experiment/train2id_movielens.csv
#      test_path: ../data/ventrella_experiment/test2id_dbbook.csv
      test_path: ../data/ventrella_experiment/test2id_movielens.csv
      dataloader: KnowledgeChainsLoader
      side_information:
#        map: ../data/ventrella_experiment/side_informations/map_dbbook.tsv
#        features: ../data/ventrella_experiment/side_informations/feat_dbbook.tsv
#        properties: ../data/ventrella_experiment/side_informations/properties_dbbook.conf
        map: ../data/ventrella_experiment/side_informations/map_movielens.tsv
        features: ../data/ventrella_experiment/side_informations/feat_movielens.tsv
        properties: ../data/ventrella_experiment/side_informations/properties_movielens.conf

  top_k: 3000  # takes an int representing the list length
  evaluation:
    cutoffs: [5, 10]  # maximum length of the recommendation list we want to consider when computing the metric
    simple_metrics: [Precision,Recall,MavF1,nDcg,MRR]
    relevance_threshold: 1  # minimum value of the rating to consider a test transaction relevant for the evaluation process
  #print_results_as_triplets: True  # generate the evaluation tables with the format: [method,metric,value]
  gpu: 1  # enable GPU acceleration with Tensorflow
  #config_test: True  # tests our configuration file before the actual run of the experiment
  external_models_path: ../external/models/__init__.py
  models:
    AttributeUserKNN:
      meta:
        save_recs: True
      neighbors: [50, 100, 150, 200, 250]
      similarity: cosine
      profile: binary
    AttributeItemKNN:
      meta:
        save_recs: True
      neighbors: [50, 100, 150, 200, 250]
      similarity: cosine
    FM:
      meta:
        save_recs: True
      epochs: [10, 15, 20]
      batch_size: [128, 256, 512]
      factors: [5, 10, 15, 20 ,25]
      lr: 0.001
      reg: 0.1
    VSM:
      meta:
        save_recs: True
      similarity: cosine
      user_profile: binary
      item_profile: binary
